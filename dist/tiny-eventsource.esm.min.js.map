{"version":3,"file":"tiny-eventsource.esm.min.js","sources":["../src/heartbeat.js","../src/eventsource.js","../src/transmit.js"],"sourcesContent":["export function heartbeat (arg) {\n\tif (arg.heartbeat.ms > 0) {\n\t\tsetTimeout(() => {\n\t\t\tif (arg.listenerCount(\"data\") > 0) {\n\t\t\t\targ.send(arg.heartbeat.msg, arg.heartbeat.event);\n\t\t\t\theartbeat(arg);\n\t\t\t}\n\t\t}, arg.heartbeat.ms);\n\t}\n}\n","import {EventEmitter} from \"node:events\";\n\nimport {heartbeat} from \"./heartbeat.js\";\nimport {transmit} from \"./transmit.js\";\n\nclass EventSource extends EventEmitter {\n\tconstructor (config, ...args) {\n\t\tconst str = typeof config === \"string\",\n\t\t\tobj = !str && config !== void 0 && config instanceof Object;\n\n\t\tsuper();\n\t\tthis.heartbeat = {\n\t\t\tevent: obj && typeof config.event === \"string\" ? config.event : \"message\",\n\t\t\tms: obj && typeof config.ms === \"number\" ? config.ms : 0,\n\t\t\tmsg: obj && typeof config.msg === \"string\" ? config.msg : \"ping\"\n\t\t};\n\t\tthis.initial = str ? [config, ...args] : [...args];\n\t\tthis.setMaxListeners(0);\n\t}\n\n\tinit (req, res) {\n\t\tlet id = -1;\n\t\tconst fn = arg => transmit(res, arg, ++id);\n\n\t\tif (req !== void 0) {\n\t\t\treq.socket.setTimeout(0);\n\t\t\treq.socket.setNoDelay(true);\n\t\t\treq.socket.setKeepAlive(true);\n\t\t\treq.on(\"close\", () => this.off(\"data\", fn));\n\t\t}\n\n\t\tif (res !== void 0) {\n\t\t\tres.statusCode = 200;\n\t\t\tres.setHeader(\"content-type\", \"text/event-stream\");\n\t\t\tres.setHeader(\"cache-control\", \"no-store, max-age=0\");\n\t\t\tres.setHeader(\"connection\", \"keep-alive\");\n\t\t\tthis.on(\"data\", fn);\n\t\t}\n\n\t\tthis.initial.forEach(i => this.send(i));\n\n\t\tif (this.heartbeat.ms > 0) {\n\t\t\theartbeat(this);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tsend (data, event, id) {\n\t\tthis.emit(\"data\", {data, event, id});\n\n\t\treturn this;\n\t}\n}\n\nexport function eventsource (...args) {\n\treturn new EventSource(...args);\n}\n","export function transmit (res, arg, id) {\n\tres.write(`id: ${arg.id || id}\\n`);\n\n\tif (arg.event !== void 0) {\n\t\tres.write(`event: ${arg.event}\\n`);\n\t}\n\n\tres.write(`data: ${typeof arg.data === \"object\" ? JSON.stringify(arg.data) : arg.data}\\n\\n`);\n}\n"],"names":["heartbeat","arg","ms","setTimeout","listenerCount","send","msg","event","EventSource","EventEmitter","constructor","config","args","str","obj","Object","super","this","initial","setMaxListeners","init","req","res","id","fn","write","data","JSON","stringify","transmit","socket","setNoDelay","setKeepAlive","on","off","statusCode","setHeader","forEach","i","emit","eventsource"],"mappings":";;;;2CAAO,SAASA,EAAWC,GACtBA,EAAID,UAAUE,GAAK,GACtBC,YAAW,KACNF,EAAIG,cAAc,QAAU,IAC/BH,EAAII,KAAKJ,EAAID,UAAUM,IAAKL,EAAID,UAAUO,OAC1CP,EAAUC,GACV,GACCA,EAAID,UAAUE,GAEnB,CCJA,MAAMM,UAAoBC,EACzBC,YAAaC,KAAWC,GACvB,MAAMC,EAAwB,iBAAXF,EAClBG,GAAOD,QAAkB,IAAXF,GAAqBA,aAAkBI,OAEtDC,QACAC,KAAKjB,UAAY,CAChBO,MAAOO,GAA+B,iBAAjBH,EAAOJ,MAAqBI,EAAOJ,MAAQ,UAChEL,GAAIY,GAA4B,iBAAdH,EAAOT,GAAkBS,EAAOT,GAAK,EACvDI,IAAKQ,GAA6B,iBAAfH,EAAOL,IAAmBK,EAAOL,IAAM,QAE3DW,KAAKC,QAAUL,EAAM,CAACF,KAAWC,GAAQ,IAAIA,GAC7CK,KAAKE,gBAAgB,EACrB,CAEDC,KAAMC,EAAKC,GACV,IAAIC,GAAM,EACV,MAAMC,EAAKvB,GCtBN,SAAmBqB,EAAKrB,EAAKsB,GACnCD,EAAIG,MAAM,OAAOxB,EAAIsB,IAAMA,YAET,IAAdtB,EAAIM,OACPe,EAAIG,MAAM,UAAUxB,EAAIM,WAGzBe,EAAIG,MAAM,SAA6B,iBAAbxB,EAAIyB,KAAoBC,KAAKC,UAAU3B,EAAIyB,MAAQzB,EAAIyB,WAClF,CDcoBG,CAASP,EAAKrB,IAAOsB,GAuBvC,YArBY,IAARF,IACHA,EAAIS,OAAO3B,WAAW,GACtBkB,EAAIS,OAAOC,YAAW,GACtBV,EAAIS,OAAOE,cAAa,GACxBX,EAAIY,GAAG,SAAS,IAAMhB,KAAKiB,IAAI,OAAQV,WAG5B,IAARF,IACHA,EAAIa,WAAa,IACjBb,EAAIc,UAAU,eAAgB,qBAC9Bd,EAAIc,UAAU,gBAAiB,uBAC/Bd,EAAIc,UAAU,aAAc,cAC5BnB,KAAKgB,GAAG,OAAQT,IAGjBP,KAAKC,QAAQmB,SAAQC,GAAKrB,KAAKZ,KAAKiC,KAEhCrB,KAAKjB,UAAUE,GAAK,GACvBF,EAAUiB,MAGJA,IACP,CAEDZ,KAAMqB,EAAMnB,EAAOgB,GAGlB,OAFAN,KAAKsB,KAAK,OAAQ,CAACb,OAAMnB,QAAOgB,OAEzBN,IACP,EAGK,SAASuB,KAAgB5B,GAC/B,OAAO,IAAIJ,KAAeI,EAC3B,QAAA4B"}